.col--filter-border.col--sliding([ngClass]="{ 'slide-up' : !showFilters }")
  // New Search Filters
  div(*ngFor="let filterKey of keys(availableFilters); let i = index")
    .filter-group(*ngIf="availableFilters[filterKey] && isArray(availableFilters[filterKey]) && availableFilters[filterKey].length > 0")
      span.filter-group__label
        h3 {{ 'FILTERS.' + filterKey | translate }}
          a#buttonCollectionTypeClear.link--accent.small(tabindex="1", [ngClass]="{ 'disable': !hasAppliedFilters(filterKey) }", (click)="clearAllFilterGroup(filterKey)") Clear
      //- Filters
      div(*ngFor="let facet of availableFilters[filterKey]")
        //- Show filters
        i.icon.icon-direction.absolute-left.tree-icon(*ngIf="facet.children && facet.children.length > 0", (click)="toggleTree(facet)", [ngClass]="{ 'icon-down' : facet.expanded, 'icon-right' : !facet.expanded }")
        //- Display of Collection Type Filters
        button.filter.parent(
            *ngIf="facet.name && facet.name.length > 0",
            id="filterCollectionTypeItem{{ facet.name }}",
            (click)="toggleFilter(filterKey == 'geography' ? facet.efq : (filterKey == 'collectiontypes' && 'contributnginstitutionid' == userInstId ? institutionFilterQuery: 'yepp'), filterKey)",
            [ngClass]="{'active': filterApplied(filterKey == 'geography' ? facet.efq : facet.name, filterKey)}",
            data-sc="search: facet"
          )
          //- Display of contributing institutions list
          span(*ngIf="filterKey != 'contributinginstitutionid' && facet.name && facet.name.length < 2") {{ filterNameMap[filterKey] && filterNameMap[filterKey][facet.name] }}
            span(*ngIf="facet.count") {{ ' (' + facet.count + ')' }}
          span(*ngIf="filterKey == 'contributinginstitutionid' && facet.showingName && facet.showingName.length > 1", [innerHtml]="facet.showingName + ' ('+institutionFilterResultsCount+')'")
          span(*ngIf="filterKey != 'contributinginstitutionid' && facet.name && facet.name.length > 1", [innerHtml]="facet.name + ' ('+facet.count+')'")
          i.icon.icon-add
          i.icon.icon-close
        //- Geo Child filters
        .child-cntnr.collapse([ngClass]="{ 'show' : facet.expanded }")
          button.filter.child(*ngFor="let child of facet.children; let childIndex = index", id="filterGeographyItem{{ 'Child' + childIndex }}", (click)="toggleFilter(child.efq, filterKey)", [ngClass]="{'active': filterApplied(child.efq, 'geography')}", data-sc="search: facet") {{ child.name }} ({{child.count}})
            i.icon.icon-add
            i.icon.icon-close
  .filter-group(*ngIf="availableFilters.dateObj")
    span.filter-group__label
      h3 Date
        a#buttonDateFilterClear.link--accent.small(tabindex="1", [ngClass]="{ 'disable': !hasAppliedFilters('date') }", (click)="clearAllFilterGroup('date')") Clear
    .date-filter-row
      input#inputDateFilterStart.form-control([(ngModel)]="availableFilters.dateObj.earliest.date", type="number", (keypress)="dateKeyPress($event)", min="0", placeholder="Start Date")
      #buttonDateFilterStartBCE.side-toggle-btn((click)="availableFilters.dateObj.earliest.era = 'BCE'", [ngClass]="{'active': availableFilters.dateObj.earliest.era == 'BCE' }") BCE
      #buttonDateFilterStartCE.side-toggle-btn((click)="availableFilters.dateObj.earliest.era = 'CE'", [ngClass]="{'active': availableFilters.dateObj.earliest.era == 'CE' }") CE
    .date-filter-row
      input#inputDateFilterEnd.form-control([(ngModel)]="availableFilters.dateObj.latest.date", type="number", (keypress)="dateKeyPress($event)", min="0", placeholder="End Date")
      #buttonDateFilterEndBCE.side-toggle-btn((click)="availableFilters.dateObj.latest.era = 'BCE'", [ngClass]="{'active': availableFilters.dateObj.latest.era == 'BCE' }") BCE
      #buttonDateFilterEndCE.side-toggle-btn((click)="availableFilters.dateObj.latest.era = 'CE'", [ngClass]="{'active': availableFilters.dateObj.latest.era == 'CE' }") CE
    .date-filter-row
      #buttonDateFilterReset.btn((click)="clearDateFilter()") RESET
      #buttonDateFilterSubmit.btn((click)="applyDateFilter()") APPLY
    .date-filter-error-msg(*ngIf="dateError") End date must be greater than or equal to Start date.
