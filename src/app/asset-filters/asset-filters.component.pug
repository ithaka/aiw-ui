.col--filter-border.col--sliding([ngClass]="{ 'slide-up' : !showFilters }")
  // New Search Filters
  div(*ngFor="let filterKey of keys(availableFilters); let i = index")
    .filter-group(*ngIf="availableFilters[filterKey] && isArray(availableFilters[filterKey]) && availableFilters[filterKey].length > 0")
      span.filter-group__label
        h3 {{ 'FILTERS.' + filterKey | translate }}
          a#buttonCollectionTypeClear.link--accent.small((keydown.enter)="clearAllFilterGroup(filterKey)", [tabindex]="hasAppliedFilters(filterKey) ? 2 : -1", [ngClass]="{ 'disable': !hasAppliedFilters(filterKey) }", (click)="clearAllFilterGroup(filterKey)", attr.aria-label="Clear, click to clear all selected {{ 'FILTERS.' + filterKey | translate }} filters") Clear
      //- Filters
      div(*ngFor="let facet of availableFilters[filterKey] | slice:0:17")
        //- Show filters
        i.icon.icon-direction.absolute-left.tree-icon((keydown.enter)="toggleTree(facet)", tabindex="2",  attr.aria-label="{{ facet.expanded ? 'Collapse' : 'Expand' }} {{facet.name}}, which has {{facet.count}} result{{facet.count > 1 ? 's' : ''}}.", *ngIf="facet.children && facet.children.length > 0", (click)="toggleTree(facet)", [ngClass]="{ 'icon-down' : facet.expanded, 'icon-right' : !facet.expanded }")
        button.filter.parent(
            *ngIf="facet.name && facet.name.length > 0  && facet.count > 0",
            id="filterCollectionTypeItem{{ facet.name }}",
            (click)="toggleFilter(filterKey == 'geography' ? facet.efq : facet.name, filterKey)",
            [ngClass]="{'active': filterApplied(filterKey == 'geography' ? facet.efq : facet.name, filterKey)}",
            data-sc="search: facet",
            tabindex="2",
            attr.aria-label="Filter on {{ facet.children && facet.children.length > 0 ? 'All of' : '' }} {{ filterKey === 'collectiontypes' ? filterNameMap[filterKey][facet.name] : filterKey === 'donatinginstitutionids' ? (facet.showingName ? facet.showingName : 'Institution ' + facet.name) : facet.name }}, which has {{facet.count}} result{{facet.count > 1 ? 's' : ''}}, {{ filterApplied(filterKey == 'geography' ? facet.efq : facet.name, filterKey) ? 'selected. To remove this filter, press the enter key or click on the filter.' : 'unselected. To apply this filter, press the enter key or click on the filter.' }}"
          )
          //- Display of Collection Type Filters
          span(*ngIf="filterKey != 'donatinginstitutionids' && facet.name && facet.name.length < 2") {{ filterNameMap[filterKey] && filterNameMap[filterKey][facet.name] }}
            span(*ngIf="facet.count") {{ ' (' + facet.count + ')' }}
          span(*ngIf="filterKey == 'donatinginstitutionids'", [innerHtml]="(facet.showingName ? facet.showingName : 'Institution '+facet.name) + ' ('+facet.count+')'")
          span(*ngIf="filterKey != 'donatinginstitutionids' && facet.name && facet.name.length > 1", [innerHtml]="facet.name + ' ('+facet.count+')'")
          i.icon.icon-add
          i.icon.icon-close
        //- Geo Child filters
        .child-cntnr.collapse([ngClass]="{ 'show' : facet.expanded }")
          button.filter.child(
            tabindex="2", 
            *ngFor="let child of facet.children; let childIndex = index", 
            id="filterGeographyItem{{ 'Child' + childIndex }}", 
            (click)="toggleFilter(child.efq, filterKey)", 
            [ngClass]="{'active': filterApplied(child.efq, 'geography')}", 
            data-sc="search: facet", 
            attr.aria-label="Filter on {{child.name}}, which has {{child.count}} result{{child.count > 1 ? 's' : ''}}, {{ filterApplied(child.efq, 'geography') ? 'selected. To remove this filter, press the enter key or click on the filter.' : 'unselected. To apply this filter, press the enter key or click on the filter.' }}"
            ) {{ child.name }} ({{child.count}})
            i.icon.icon-add
            i.icon.icon-close
  .filter-group(*ngIf="availableFilters.dateObj")
    span.filter-group__label
      h3 Date
        a#buttonDateFilterClear.link--accent.small((keydown.enter)="clearAllFilterGroup('date')", [tabindex]="hasAppliedFilters('date') ? 2 : -1", [ngClass]="{ 'disable': !hasAppliedFilters('date') }", (click)="clearAllFilterGroup('date')", aria-label="Clear, click to clear applied Date filter") Clear
    .date-filter-row
      input#inputDateFilterStart.form-control(tabindex="2", [(ngModel)]="availableFilters.dateObj.earliest.date", type="number", (keypress)="dateKeyPress($event)", min="0", placeholder="Start Date", aria-label="Start date, only include results from after this date")
      #buttonDateFilterStartBCE.side-toggle-btn(role="button", (keydown.enter)="availableFilters.dateObj.earliest.era = 'BCE'", tabindex="2", (click)="availableFilters.dateObj.earliest.era = 'BCE'", [ngClass]="{'active': availableFilters.dateObj.earliest.era == 'BCE' }", attr.aria-label="BCE, {{ availableFilters.dateObj.earliest.era == 'BCE' ? 'selected' : 'unselected' }}") BCE
      #buttonDateFilterStartCE.side-toggle-btn(role="button", (keydown.enter)="availableFilters.dateObj.earliest.era = 'CE'", tabindex="2", (click)="availableFilters.dateObj.earliest.era = 'CE'", [ngClass]="{'active': availableFilters.dateObj.earliest.era == 'CE' }", attr.aria-label="CE, {{ availableFilters.dateObj.earliest.era == 'CE' ? 'selected' : 'unselected' }}") CE
    .date-filter-row
      input#inputDateFilterEnd.form-control(tabindex="2", [(ngModel)]="availableFilters.dateObj.latest.date", type="number", (keypress)="dateKeyPress($event)", min="0", placeholder="End Date", aria-label="End date, only include results from before this date")
      #buttonDateFilterEndBCE.side-toggle-btn(role="button", (keydown.enter)="availableFilters.dateObj.latest.era = 'BCE'", tabindex="2", (click)="availableFilters.dateObj.latest.era = 'BCE'", [ngClass]="{'active': availableFilters.dateObj.latest.era == 'BCE' }", attr.aria-label="BCE, {{ availableFilters.dateObj.latest.era == 'BCE' ? 'selected' : 'unselected' }}") BCE
      #buttonDateFilterEndCE.side-toggle-btn(role="button", (keydown.enter)="availableFilters.dateObj.latest.era = 'CE'", tabindex="2", (click)="availableFilters.dateObj.latest.era = 'CE'", [ngClass]="{'active': availableFilters.dateObj.latest.era == 'CE' }", attr.aria-label="CE, {{ availableFilters.dateObj.latest.era == 'CE' ? 'selected' : 'unselected' }}") CE
    .date-filter-row
      #buttonDateFilterReset.btn(role="button", (keydown.enter)="clearDateFilter()", tabindex="2", (click)="clearDateFilter()") RESET
      #buttonDateFilterSubmit.btn(role="button", (keydown.enter)="applyDateFilter()", tabindex="2", (click)="applyDateFilter()") APPLY
    .date-filter-error-msg(*ngIf="dateError") End date must be greater than or equal to Start date.
.row.has-icon-overlay([hidden]="(keys(availableFilters)).length>0")
  i.icon-lg.icon-overlay.icon-loading-large
