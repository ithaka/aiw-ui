#advancedModal.modal.fade-in(tabindex="0")
  //- Login Help Modal
  .modal-dialog.modal-lg(role="dialog", (keydown.esc)="closeModal.emit()")
    .modal-content
      .modal-header
        h1#advanced-search-title(tabindex="0", (keydown.shift.tab)="closeModal.emit()") {{ 'ADVANCED_SEARCH_MODAL.TITLE' | translate }}
        button.close(type="button", (click)="close()", data-dismiss="modal", aria-label="Close")
          span(aria-hidden="true") &times;
      .modal-body
        .container-fluid
          .row
            .col-lg-6
              h3 {{ 'ADVANCED_SEARCH_MODAL.SEARCH_HEADING' | translate }}
              p(class="small") {{ 'ADVANCED_SEARCH_MODAL.SEARCH_DESCRIPTION' | translate }}
              .form-group(*ngFor="let query of advanceQueries; let i = index;")
                .input-group(id="advanceQueryGroup{{i + 1}}")
                  .input-group-btn(ngbDropdown, #advDrop1="ngbDropdown", [ngClass]="{ 'show' : focus }", *ngIf="i !== 0")
                    label.sr-only(for="advanceQueryOperator{{i + 1}}") {{query.operator}}, choose a boolean relationship between search box {{i}} and search box {{i + 1}}
                    button.btn.btn-secondary.dropdown-toggle(id="advanceQueryOperator{{i + 1}}", ngbDropdownToggle, type="button", (keydown.shift.tab)="advDrop1.close()")
                      | {{ query.operator }}
                      = " "
                    .dropdown-menu(ngbDropdownMenu, aria-labelledby="dropdown")
                      button.dropdown-item((click)="query.operator = 'AND'") {{ 'ADVANCED_SEARCH_MODAL.BOOLEAN_OPTIONS.AND' | translate }}
                      button.dropdown-item((click)="query.operator = 'OR'") {{ 'ADVANCED_SEARCH_MODAL.BOOLEAN_OPTIONS.OR' | translate }}
                      button.dropdown-item((click)="query.operator = 'NOT'", (keydown.tab)="advDrop1.close()") {{ 'ADVANCED_SEARCH_MODAL.BOOLEAN_OPTIONS.NOT' | translate }}
                  label.sr-only(for="inputAdvanceQuery{{i + 1}}") Search box {{i + 1}}: type your search terms and then choose which field to search
                  input.form-control(id="inputAdvanceQuery{{i + 1}}", [(ngModel)]="query.term", (change)="validateForm()", type="text")
                  .input-group-btn(ngbDropdown, #advDrop2="ngbDropdown")
                    label.sr-only(for="advanceQueryField{{i + 1}}") {{ query.field.name }}. Choose which fields to filter search box {{i + 1}} by, collapsed
                    button.btn.btn-secondary.dropdown-toggle(id="advanceQueryField{{i + 1}}", ngbDropdownToggle, type="button", (keydown.shift.tab)="advDrop2.close()")
                      | {{ query.field.name }}
                      = " "
                    .dropdown-menu(ngbDropdownMenu, aria-labelledby="fieldDropdown")
                      button.dropdown-item(*ngFor="let field of fields; let i = index", (click)="query.field = field", (keydown.tab)="closeDropdown(i, fields.length, advDrop2)", [attr.title]="field.description | translate") {{ field.name }}
                  label.sr-only(for="removeAdvanceQueryBtn{{i + 1}}") Remove search query
                  button.close(id="removeAdvanceQueryBtn{{i + 1}}", type="button", (click)="clearAdvanceQuery(i)")
                    span(style="font-family:Aria, Arial, Helvetica;") &times;
              .form-group(*ngIf="advanceQueries.length < 10")
                label.sr-only(for="addQueryBtn") Add Query, add another query to search an additional field
                button.btn.btn-secondary(id="addQueryBtn", title="Add up to 10 field queries", (click)="addAdvanceQuery()") Add Query
              .form-group.pt-3
                h3 {{ 'ADVANCED_SEARCH_MODAL.DATE_HEADING' | translate }}
                p.small {{ 'ADVANCED_SEARCH_MODAL.DATE_DESCRIPTION' | translate }}
                .form-card.card.dt-grp
                  .date-filter-row
                    label.sr-only(for="inputDateFilterStart") Start date, only include results from after this date
                    input#inputDateFilterStart.form-control([(ngModel)]="advanceSearchDate['startDate']", (change)="validateForm()", type="number", (keypress)="dateKeyPress($event)", min="0", placeholder="Start Date")
                    label.sr-only(for="buttonDateFilterStartBCE") BCE, {{ advanceSearchDate['startEra'] == 'BCE' ? 'selected' : 'unselected' }}
                    button#buttonDateFilterStartBCE.side-toggle-btn((click)="advanceSearchDate['startEra'] = 'BCE'", [ngClass]="{'active': advanceSearchDate['startEra'] == 'BCE' }", tabIndex="0", role="button") BCE
                    label.sr-only(for="buttonDateFilterStartCE") CE, {{ advanceSearchDate['startEra'] == 'CE' ? 'selected' : 'unselected' }}
                    button#buttonDateFilterStartCE.side-toggle-btn((click)="advanceSearchDate['startEra'] = 'CE'", [ngClass]="{'active': advanceSearchDate['startEra'] == 'CE' }", tabIndex="0", role="button") CE
                  .date-filter-row
                    label.sr-only(for="inputDateFilterEnd") End date, only include results from before this date
                    input#inputDateFilterEnd.form-control([(ngModel)]="advanceSearchDate['endDate']", (change)="validateForm()", type="number", (keypress)="dateKeyPress($event)", min="0", placeholder="End Date")
                    label.sr-only(for="buttonDateFilterEndBCE") BCE, {{ advanceSearchDate['endEra'] == 'BCE' ? 'selected' : 'unselected' }}
                    button#buttonDateFilterEndBCE.side-toggle-btn((click)="advanceSearchDate['endEra'] = 'BCE'", [ngClass]="{'active': advanceSearchDate['endEra'] == 'BCE' }", tabIndex="0", role="button") BCE
                    label.sr-only(for="buttonDateFilterEndCE") CE, {{ advanceSearchDate['endEra'] == 'CE' ? 'selected' : 'unselected' }}
                    button#buttonDateFilterEndCE.side-toggle-btn((click)="advanceSearchDate['endEra'] = 'CE'", [ngClass]="{'active': advanceSearchDate['endEra'] == 'CE' }", tabIndex="0", role="button") CE
            .col-lg-6
              h3 {{ 'ADVANCED_SEARCH_MODAL.FILTER_HEADING' | translate }}
              p.small {{ 'ADVANCED_SEARCH_MODAL.FILTER_DESCRIPTION' | translate }}
              .row.has-icon-overlay(*ngIf="loadingFilters")
                i.icon-lg.icon-overlay--top.icon-loading-large(style="background-color:transparent;")

              .form-group(*ngFor="let filterGroup of availableFilters")
                div(*ngIf="filterGroup.name")
                  label {{ "FILTERS." + filterGroup.name | translate }}
                  .form-card.card
                    ul.list-group.list-group-flush.compact
                      li.list-group-item(*ngFor="let filter of filterGroup.values")
                        .custom-control.custom-checkbox
                          input.custom-control-input(type="checkbox", [checked]="filter.checked", attr.aria-label="{{ filter.name }}, which has {{ filter.count }} items")
                          label.custom-control-label((click)="toggleFilter(filter)")
                            | {{ filter.name }} {{ filter.count ? '(' + filter.count +')' : '' }}
                        ul.list-group.list-group-child(*ngIf="filter.children")
                          li.list-group-item(*ngFor="let child of filter.children")
                            .custom-control.custom-checkbox
                              input.custom-control-input(type="checkbox", [checked]="child.checked", attr.aria-label="{{ child.name }}, which has {{ child.count }} items")
                              label.custom-control-label((click)="toggleFilter(child, filter)")
                                | {{ child.name }} {{ child.count ? '(' + child.count +')' : '' }}
      .modal-footer
        .alert.alert-warning(*ngIf="error.empty", [innerHtml]="'ADVANCED_SEARCH_MODAL.ERRORS.EMPTY_SEARCH' | translate")
        .alert.alert-warning(*ngIf="error.date", [innerHtml]="'ADVANCED_SEARCH_MODAL.ERRORS.DUMB_DATE' | translate")
        label.sr-only(for="helpBtn") Help
        button.btn.btn-link.with-pad(id="helpBtn", tabindex="0", (click)="openHelp()") {{ 'ADVANCED_SEARCH_MODAL.BUTTONS.HELP' | translate }}
        label.sr-only(for="clearBtn") Clear all search queries
        button.btn.btn-secondary(id="clearBtn", (click)="resetFilters()") {{ 'ADVANCED_SEARCH_MODAL.BUTTONS.CLEAR' | translate }}
        label.sr-only(for="searchBtn") Search
        button.btn.btn-primary(id="searchBtn", (click)="applyAllFilters()", data-sc="search: advanced query", (keydown.tab)="$event.stopPropagation(); $event.preventDefault(); startModalFocus()") {{ 'ADVANCED_SEARCH_MODAL.BUTTONS.SEARCH' | translate }}
