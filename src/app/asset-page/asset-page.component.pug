.present-mode-curtain(*ngIf="(presentMode || studyMode) && isFullscreen")
.container-fluid.asset-page(*ngIf="assetIds[0]", [class.fullscreen]="isFullscreen")
  .row
    //- View prev/next asset
    .title-nav-cntnr.col-md-12([class.hidden]="isFullscreen")
      .row
        .col-2
          span#previousPageLink.back-results(*ngIf="prevRouteParams.length > 0", (keyup.enter)="backToResults()", (click)="backToResults()", tabindex="1", aria-label="Back to results", role="link")
            i.icon.icon-arrow-back
            span.d-none.d-md-inline-block {{ 'ASSET_PAGE.LINKS.BACK' | translate}}
        .col-sm-8.col-md-offset-2.col-lg-9.col-lg-offset-1
          .title-wrap(*ngIf="assets[0]", tabindex="1")
            .title.text-truncate([innerHTML]="assets[0].title ? assets[0].title : ''", [attr.aria-label]="getTitleAndResults()")
            //- Pagination
            .paginator
              i.icon.icon-direction.icon-left(title="Previous in results", (click)="showPrevAsset()", (keyup.enter)="showPrevAsset()", [class.disabled]="assetNumber <= 1", [attr.tabindex]="assetNumber <= 1 ? -1 : 1", aria-label="Previous item, press enter to go to previous result item. You can also use left and right arrow keys to navigate between result items.", role="button")
              span#assetPageNumber.font-weight-bold {{ assetNumber }}
              span.font-weight-normal &nbsp;of&nbsp;
              span#assetPageCount.font-weight-bold {{ totalAssetCount - restrictedAssetsCount }}
              i.icon.icon-direction.icon-right(title="Next in results", (click)="showNextAsset()", (keyup.enter)="showNextAsset()", [class.disabled]="assetNumber >= totalAssetCount - restrictedAssetsCount", [attr.tabindex]="assetNumber >= totalAssetCount - restrictedAssetsCount ? -1 : 1", aria-label="Next item, press enter to go to next result item. You can also use left and right arrow keys to navigate between result items.", role="button")
    //- for accessibility so that page has title
    h1.sr-only([innerHTML]="getTitleAndResults()")
    //- Asset Viewer Row
    .asset-col([ngClass]="[ isFullscreen ? 'fullscreen-container' : 'col-md-8', showAssetDrawer && isFullscreen ? 'drawer' : '' ]")
      ng-container(*ngIf="userSessionFresh")
        //- Artstor Viewer
        artstor-viewer(
            *ngFor="let assetId of (isFullscreen ? assetIds : [assetIds[0]]); let i = index",
            [testEnv]="_auth.getEnv() === 'test'",
            [assetId]="assetId",
            [encrypted]="encryptedAccess",
            [groupId]="assetGroupId",
            [zoom]="indexZoomMap[i]",
            (assetMetadata)="handleLoadedMetadata($event, i)",
            [ngClass]="[ 'asset-viewer-' + assetIds.length ]",
            (fullscreenChange)="updateFullscreenVar($event)",
            [index]="i",
            [assetCompareCount]="assets.length",
            [assetNumber]="assetNumber",
            [assetGroupCount]="totalAssetCount - restrictedAssetsCount",
            [assets]="assets",
            [isFullscreen]="isFullscreen",
            [showCaption]="showAssetCaption",
            [quizMode]="quizMode",
            [prevAssetResults]="prevAssetResults",
            (removeAsset)="toggleAsset($event, i)",
            (nextPage)="showNextAsset()",
            (prevPage)="showPrevAsset()",
            (multiViewPageViaArrow)="multiViewPageViaArrow()",
            (multiViewPageViaThumbnail)="multiViewPageViaThumbnail()",
            (assetDrawer)="toggleAssetDrawer(!showAssetDrawer)",
            [legacyFlag]="false",
            [openLibraryFlag]="fromOpenLibrary"
            aria-label="Use the arrow keys to move the image, press 0 to center the image, and the plus and minus keys to zoom in and out."
          )
      //- Related results from JSTOR
      .pl-3(*ngIf="jstorResults.length > 0 && relatedResFlag")
        .row-hdr.pt-3 Related Results from JSTOR
        .jstor-result(*ngFor="let result of jstorResults")
          a([attr.href]="'http://www.jstor.org/stable/' + result.doi", target="_blank", (mouseenter) ="setToolTipData(result)", [ngbTooltip]="tipContent")
            .type {{ result.type + ': '}}
            .label([innerHTML]="result.label")
        a.link.small([attr.href]="'http://www.jstor.org/action/doBasicSearch?Query=' + relatedResultsQuery", target="_blank") See more Results
      ng-template(#tipContent="", placement="right")
        div(*ngIf="selectedJstorResult.title")
          h3 {{ selectedJstorResult.title }}
          .tool-tip-lbl(*ngIf="selectedJstorResult.authors") Author
          div(*ngFor="let author of selectedJstorResult.authors") {{ author }}
          br
          .tool-tip-lbl(*ngIf="selectedJstorResult.publishers") Published by:
          div(*ngFor="let publisher of selectedJstorResult.publishers") {{ publisher.publisher }}
          br
          div(*ngIf="selectedJstorResult.doi") Stable URL: {{ 'http://www.jstor.org/stable/' + selectedJstorResult.doi }}

      .col-md-12.quiz-caption-cntnr(*ngIf="isFullscreen", [ngClass]="[ showAssetCaption ? '' : 'cntnr-bg' ]")
        ang-promo-tooltip(*ngIf="user.isLoggedIn && !quizModeTTDismissed && studyMode", [options]="quizModeTooltipOpts", (close)="closeQuizModeTooltip()")
        .caption-btn-cntnr([ngClass]="[ showAssetCaption ? 'active' : '' ]", tabindex="0", (tap)="showAssetCaption = !showAssetCaption", (keydown.enter)="showAssetCaption = !showAssetCaption", aria-live="polite", attr.aria-label="{{ showAssetCaption ? 'Show Caption On' : 'Show Caption Off' }}")
          toggle-button.pr-1([checked]="showAssetCaption")
          | SHOW CAPTION
        .quiz-browse-cntnr(*ngIf="quizMode")
          i.icon.icon-direction.icon-left([class.disabled]="!quizShuffle && assetNumber <= 1 ? true : false", title="Previous in results", tabindex="0", (tap)="showPrevAsset()", (keydown.enter)="showPrevAsset()")
          i.icon.icon-direction.icon-right([class.disabled]="!quizShuffle && assetNumber >= totalAssetCount - restrictedAssetsCount ? true: false", title="Next in results", tabindex="0", (tap)="showNextAsset()", (keydown.enter)="showNextAsset()")
        .shuffle-cntnr(*ngIf="quizMode", [ngClass]="[ quizShuffle ? 'active' : '' ]", tabindex="0", (tap)="toggleQuizShuffle()", (keydown.enter)="toggleQuizShuffle()", title="Toggle Asset Suffle")
          toggle-button.pr-1([checked]="quizShuffle")
          | SHUFFLE {{ quizShuffle ? 'ON' : 'OFF' }}
        .quiz-cntnr([ngClass]="[ quizMode ? 'active' : '' ]", tabindex="0", (tap)="toggleQuizMode()", (keydown.enter)="toggleQuizMode()", title="{{ quizMode ? 'Deactivate Quiz Mode' : 'Activate Quiz Mode' }}")
          toggle-button.pr-1([checked]="quizMode")
          | QUIZ MODE {{ quizMode ? 'ON' : 'OFF' }}
    //- Asset Metadata Column
    .col-md-4(*ngIf="assets[0]",[class.hidden]="isFullscreen")
      .py-3
        .btn-row
          //- Edit
          //- * (mouseup) is a Firefox fix for firing the copy event
          button.assetpage-btn.btn.btn-secondary(*ngIf="user.isLoggedIn && assets[0].personalCollectionOwner === user['baseProfileId']", [class.active]="showEditDetails", (click)="loadEditDetailsForm()", tabindex="2", aria-label="Edit details for this item")
            | {{ 'ASSET_PAGE.BUTTONS.EDIT_DETAILS' | translate}}
          //- the .driver-find-group-btn class is important for the tour to find it, be careful when removing or changing it
          .dropdown.d-inline-block.driver-find-group-btn(ngbDropdown, aria-haspopup="true")
            button#addToGroupDropdown.btn.btn-primary(ngbDropdownToggle, tabindex="2", aria-label="Add to groups")
              | {{ 'ASSET_PAGE.BUTTONS.ADD_TO_GROUP' | translate}}
              = " "
            .dropdown-menu(ngbDropdownMenu)
              a#addItemToGroupLink.dropdown-item(
                (click)="addAssetToIG()",
                (keydown.enter)="addAssetToIG()",
                tabindex="2",
                aria-label="Add Item to Group",
                role="button")
                i.icon.icon-add-item
                | &nbsp;Add item
              a#addViewToGroupLink.dropdown-item(
                (click)="addAssetToIG(true)",
                (keydown.enter)="addAssetToIG(true)",
                tabindex="2",
                aria-label="Add View to Group",
                [class.disabled]="assetViewer.state !== 1 || multiviewItems",
                role="button")
                i.icon.icon-add-detail-view([class.disabled]="assetViewer.state !== 1 || multiviewItems")
                | &nbsp;Add detail view
          ng-container([ngSwitch]="showDownloadDropdown")
            .dropdown.d-inline-block(*ngSwitchCase="true", ngbDropdown, triggers="focusin:focusout mouseenter:mouseleave", placement="bottom", aria-haspopup="true")
              button#downloadAssetDropdown.btn.btn-secondary(ngbDropdownToggle [class.loading]="downloadLoading", (click)="genDownloadLinks()", (keydown.enter)="genDownloadLinks()", (keyup.arrowdown)="downloadOptsArrowDown($event.target)", tabindex="2", aria-label="Download")
                | {{ 'ASSET_PAGE.BUTTONS.DOWNLOAD' | translate}}
                = " "
              .dropdown-menu.download-menu(ngbDropdownMenu, aria-labelledby="dropdownBasic1")
                h6.dropdown-header(*ngIf="assets[0].disableDownload") Item not available for download
                a#downloadAssetLink.dropdown-item(download,
                  [attr.href]="userHasAcceptedTerms() ? generatedFullURL : null",
                  (click)="handleDownloadImageClick()",
                  (keydown.enter)="handleDownloadImageClick()",
                  (keyup.arrowdown)="downloadOptsArrowDown($event.target)",
                  (keyup.arrowup)="downloadOptsArrowUp($event.target)",
                  [class.disabled]="assets[0].disableDownload",
                  title="{{ assets[0].disableDownload ? 'Image is not available for download.' : 'Image download'}}",
                  target="_blank",
                  tabindex="2",
                  aria-label="Download item",
                  role="button")
                  i.icon.icon-download
                  | &nbsp;Download item
                a#downloadViewLink.dropdown-item(
                  [attr.href]="userHasAcceptedTerms() ? downloadViewLink : null",
                  (click)="handleDownloadViewClick()",
                  (keydown.enter)="handleDownloadViewClick()",
                  (keyup.arrowup)="downloadOptsArrowUp($event.target)",
                  [class.disabled]="!downloadViewReady || assets[0].disableDownload || assets[0].typeName !== 'image'",
                  target="_blank",
                  tabindex="2",
                  aria-label="Download item’s detail view",
                  role="button")
                  i.icon.icon-download-detail-view
                  | &nbsp;Download detail view
            button.assetpage-btn.btn.btn-secondary(
              *ngSwitchCase="false",
              (click)="showLoginModal = true",
              (keydown.enter)="showLoginModal = true",
              tabindex="2",
              aria-label="Download"
            )
              | {{ 'ASSET_PAGE.BUTTONS.DOWNLOAD' | translate}}
              i#downloadAssetLink.icon.icon-download-asset-orange
          .row#asset-btn
            a.assetpage-btn.btn.btn-secondary(*ngIf="assets[0]", (click)="showGenerateCitation = true", (focus)="closeDropdowns()", (keydown.enter)="showGenerateCitation = true", tabindex="2", aria-label="Cite this item", role="button")
              | {{ 'ASSET_PAGE.BUTTONS.GENERATE_CITATION' | translate}}
            a.assetpage-btn.btn.btn-secondary(*ngIf="assets[0]", [routerLink]="['/assetprint/' + assets[0].id]", (click)="logPrint()", (keydown.enter)="logPrint()", target="_blank", tabindex="2", aria-label="See this item in print preview", role="button")
              | {{ 'ASSET_PAGE.BUTTONS.PRINT' | translate}}

          //- Copy URL
          //- * Do not show for Personal Collection assets
          .btn-group#copy-link(*ngIf="isBrowser && !assets[0].personalCollectionOwner")
            input#generatedImgURL.form-control.form-control__copy(#copyUrlInput="", readonly, [ngModel]="generatedImgURL", (click)="copyUrlInput.select(); document.execCommand('copy', false, null);", tabindex="2", aria-label="Item URL")
            button.assetpage-btn.btn.btn-secondary([class.active]="showCopyUrl", (mousedown)="showCopyUrl ? showCopyUrl = false : copyGeneratedImgURL(assets[0])", (mouseup)="copyUrlInput.select(); document.execCommand('copy', false, null);", (keydown.enter)="showCopyUrl ? showCopyUrl = false : copyGeneratedImgURL(assets[0])", (keyup.enter)="copyUrlInput.select(); document.execCommand('copy', false, null);", tabindex="2", aria-label="Copy Item URL")
              | {{ 'ASSET_PAGE.BUTTONS.LINK' | translate}}
              //- i#genImgURLlink.icon.icon-share-white

          .form-group.pt-1([class.hidden]="!showCopyUrl")
            .alert.alert-info(*ngIf="copyURLStatusMsg") {{ copyURLStatusMsg }}
        //-------------------
        //- Metadata Display
        //-------------------
        div#mainContent([class.d-none]="showEditDetails", tabindex="0")
          .row-hdr.pt-3(*ngIf="(assets[0].formattedMetadata | keys).length > 0") {{ 'ASSET_PAGE.HEADER_LABELS.OBJ_DETAILS' | translate}}
          //- Alert: Metdata Processing
          .alert.alert-info(*ngIf="showMetadataPending")
            b {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.PENDING_TITLE' | translate }}&nbsp;
            | {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.PENDING_MESSAGE' | translate }}
          .meta-block.collection-type-display(*ngIf="collectionType")
            ang-collection-badge([collectionType]="collectionType")
          //- Metadata loops
          .meta-block(*ngFor="let fieldName of assets[0].formattedMetadata | keys")
            ng-container(*ngIf="fieldName != 'Rights' && fieldName != 'License'")
              .label {{ fieldName }}
              ng-container(*ngFor="let value of assets[0].formattedMetadata[fieldName]; let i=index")
                //- Creator
                .value.meta-link(
                  *ngIf="fieldName === 'Creator'",
                  [attr.data-qa-id]="cleanId(fieldName)",
                  (click)="trackCreatorLink(value)",
                  [innerHTML]="value | filterLink:'artcreator'"
                )
                  //- [routerLink]="['/search', 'artcreator:(' + value + ')']",
                //- Collections
                ng-container(*ngIf="fieldName === 'Collection' && i === 0")
                  div(*ngFor="let col of assets[0].collectionLinks")
                    a.value.meta-link.col-link(id="collection-link", (click)="trackCollectionLink(cleanFieldValue(col.displayName))", [routerLink]="col.route", [innerHTML]="cleanFieldValue(col.displayName) | linkify", [attr.aria-labelledby]="Collections")
                //- Subject
                a.value.meta-link(
                  *ngIf="fieldName === 'Subject'",
                  [attr.data-qa-id]="cleanId(fieldName)",
                  (click)="trackSubjectLink(value)",
                  [innerHTML]="value | filterLink:'artsubject'"
                )
                //- Other fields (culture, material, work type, description...etc)
                div(*ngIf="fieldName !== 'Collection' && fieldName !== 'Subject' && fieldName !== 'Creator'")
                  .value([attr.data-qa-id]="cleanId(fieldName)", [innerHTML]="cleanFieldValue(value) | linkify")
          //- Rights
          .meta-block(*ngIf="assets[0].formattedMetadata.Rights && assets[0].formattedMetadata.Rights.length > 0")
            .label#Rights Rights
            div(*ngFor="let right of assets[0].formattedMetadata.Rights")
              span(*ngIf="rightsText === right")
                img.rights-icon([attr.src]="rightsImg", [attr.alt]="right")
                | &nbsp;
                a.value.meta-link.rights-text([innerHTML]="cleanFieldValue(right) | lowercase | linkify", [attr.href]="rightsLink", aria-label="Learn about this rights statement on rightsstatements.org", target="_blank")
              .value(*ngIf="rightsText !== right", [innerHTML]="cleanFieldValue(right) | linkify", [attr.aria-labelledby]="'Rights'")
          //- License
          .meta-block(*ngIf="assets[0].formattedMetadata.License && assets[0].formattedMetadata.License.length > 0")
            .label#License License
            .license(*ngFor="let license of assets[0].formattedMetadata.License")
              a(*ngIf="license", [attr.href]="license.licenseLink", aria-label="Learn about this license statement on creativecommons.org", target="_blank")
                img.license-icon([attr.src]="license.licenseImg", [attr.alt]="license.licenseText", title="License")
                | &nbsp;
                span.value.license-text([innerHTML]="cleanFieldValue(license.licenseText) | linkify", title="License")
            .value([innerHTML]="cleanFieldValue('Use of this image is in accordance with the <a href=`https://www.artstor.org/artstor-terms/` target=`_blank` >Artstor Terms & Conditions</a>') | linkify")
          //- File Properties
          .row-hdr.pt-3(*ngIf="assets[0].filePropertiesArray.length > 0") {{ 'ASSET_PAGE.HEADER_LABELS.FILE_PROPS' | translate}}
          //- File Name
          .meta-block(*ngIf="assets[0].fileName")
            .label#fileName {{ 'ASSET_PAGE.METADATA_LABELS.FILE_NAME' | translate }}
              .value([innerHtml]="assets[0].fileName", aria-labelledby="fileName")
          //- SSID
          .meta-block(*ngIf="assets[0].SSID")
            .label#ssid {{ 'ASSET_PAGE.METADATA_LABELS.SSID' | translate }}
              .value([innerHtml]="assets[0].SSID", aria-labelledby="ssid")
          //- IAP and Report Error
          .text-left.pt-2
            a#buttonRequestIap.btn.btn-secondary.my-1(*ngIf="iapFormUrl", [attr.href]="getIapFormUrl(assets[0])", (click)="logIAP(assets[0])", title="Request Image for Academic Publishing", tabindex="8", target="_blank") {{'ASSET_PAGE.BUTTONS.GET_IAP' | translate}}
            a#buttonReportAssetError.btn.btn-secondary.my-1(*ngIf="errorFormUrl", [attr.href]="errorFormUrl", title="Report an error", tabindex="14", target="_blank") {{'ASSET_PAGE.BUTTONS.REPORT_ERROR' | translate}}
            button.btn.btn-secondary.ml-2(*ngIf="user.isLoggedIn && assets[0].personalCollectionOwner === user['baseProfileId']", (click)="showDeletePCModal = true", type="button", tabindex="6", [class.loading]="deleteLoading") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DELETE_BTN' | translate }}

        //- Report Error Form, hidden by default
        .mt-2.d-none([class.d-block]="showEditDetails")
          button.close.mb-3((click)="showExitEdit = true", type="button", aria-label="Close")
            span(aria-hidden="true") &times;

          form#editDetailsForm.pt-4.mr-4([formGroup]="editDetailsForm", (ngSubmit)="editDetailsFormSubmit(editDetailsForm.value)")
            .form-body
              .form-group
                label(for="creatorInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.CREATOR' | translate }}
                input#creatorInput.form-control(type="text", [formControl]="editDetailsForm.controls['creator']", placeholder="", spellcheck="false", tabindex="6")
              .form-group
                label(for="titleInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.TITLE' | translate }}
                input#titleInput.form-control(type="text", [formControl]="editDetailsForm.controls['title']", placeholder="", spellcheck="false", tabindex="6")
                .has-danger(*ngIf="editDetailsFormSubmitted && editDetailsForm.controls['title'].hasError('required')")
                  p.form-control-feedback {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.TITLE_REQUIRED_MSG' | translate }}
              .form-group
                label(for="worktypeInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.WORK_TYPE' | translate }}
                input#worktypeInput.form-control(type="text", [formControl]="editDetailsForm.controls['work_type']", placeholder="", spellcheck="false", tabindex="6")
              .form-group
                label(for="dateInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DATE' | translate }}
                input#dateInput.form-control(type="text", [formControl]="editDetailsForm.controls['date']", placeholder="", spellcheck="false", tabindex="6")
              .form-group
                label(for="locationInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.LOCATION' | translate }}
                input#locationInput.form-control(type="text", [formControl]="editDetailsForm.controls['location']", placeholder="", spellcheck="false", tabindex="6")
              .form-group
                label(for="materialInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.MATERIAL' | translate }}
                input#materialInput.form-control(type="text", [formControl]="editDetailsForm.controls['material']", placeholder="", spellcheck="false", tabindex="6")
              .form-group
                label(for="descriptionInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DESCRIPTION' | translate }}
                input#descriptionInput.form-control(type="text", [formControl]="editDetailsForm.controls['description']", placeholder="", spellcheck="false", tabindex="6")
              .form-group
                label(for="subjectInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.SUBJECT' | translate }}
                input#subjectInput.form-control(type="text", [formControl]="editDetailsForm.controls['subject']", placeholder="", spellcheck="false", tabindex="6")
              .form-group.has-danger(*ngIf="uiMessages.deleteFailure")
                .form-group-feedback {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DELETE_ERROR' | translate }}
              .form-group.has-danger(*ngIf="uiMessages.saveFailure")
                .form-group-feedback {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.SAVE_ERROR' | translate }}
              .btn-row
                button.btn.btn-secondary((click)="showDeletePCModal = true", type="button", tabindex="6", [class.loading]="deleteLoading") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DELETE_BTN' | translate }}
                button.btn.btn-primary(type="submit", [class.loading]="isProcessing", tabindex="6") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.SAVE_BTN' | translate }}

    .fullscreen-btns.button-group(*ngIf="isFullscreen", [class.fade-out]="showAssetDrawer")
      button.btn.btn-light(*ngIf="!quizMode && !showAssetDrawer", (click)="toggleAssetDrawer(!showAssetDrawer)")
          | {{ 'ASSET_PAGE.BUTTONS.COMPARE' | translate}}
          i.icon.icon-compare
      button.btn.btn-light(
        *ngIf="!showAssetDrawer"
        type="button",
        (click)="exitPresentationMode()",
        aria-label="Close",
        title="Exit Fullscreen"
      )
        | Exit
        .icon.icon-exit-fullscreen
    //- Asset Drawer
    .asset-drawer(*ngIf="showAssetDrawer && isFullscreen", [class.slideOut]="showAssetDrawer && isFullscreen")
      .col-sm-12
        h3.asset-drawer__header((click)="toggleAssetDrawer(!showAssetDrawer)")
          button.asset-drawer__close.pr-1(
            *ngIf="isFullscreen",
            type="button",
            aria-label="Close",
            style="float:left;"
          )
            .icon.icon-right
          | COMPARE
        .text-center
          pagination([pageObj]="pagination", (goToPage)="goToPage($event)", style="display:inline-block")
        div.pt-1.pb-3(*ngIf="prevAssetResults.thumbnails.length < 1")
          .alert.alert-info {{ 'ASSET_PAGE.MESSAGES.NEEDASSETS' | translate}}
        ang-thumbnail.card.card--asset(*ngFor="let asset of prevAssetResults.thumbnails", [thumbnail]="asset", [ngClass]="{ 'selected' : asset.selected || isPrimaryAsset(asset) }", (click)="toggleAsset(asset)", (keydown.enter)="toggleAsset(asset)")
        .text-center.pt-2
          pagination([pageObj]="pagination", (goToPage)="goToPage($event)", style="display:inline-block")
  p#screen-reader-notification-region.sr-only(role="region", aria-live="assertive", aria-atomic="true") {{ screenReaderMessage }}
ang-agree-modal(
  *ngIf="showAgreeModal",
  (closeModal)="showAgreeModal = false",
  (acceptedTerms)="handleAcceptance()",
  [downloadUrl]="downloadUrl",
  [downloadName]="downloadName",
  [isMSAgent]="isMSAgent"
)
ang-login-req-modal(*ngIf="showLoginModal", (closeModal)="showLoginModal = false")
ang-add-to-group(
  *ngIf="showAddModal",
  [selectedAssets]="[ assets[0] ]",
  [copySelectionStr]=" 'ADD_TO_GROUP_MODAL.FROM_ASSET' ",
  (createGroup)="showCreateGroupModal = true; showAddModal = false;",
  (doLog)="trackEvent('artstor_add_asset_to_existing', $event)",
  (closeModal)="updatePrimaryAssetZoom(); showAddModal = false",
  (showToast)="handleToast($event)"
)

ang-new-ig-modal(*ngIf="showCreateGroupModal", [selectedAssets]="[ assets[0] ]", (addToGroup)="showAddModal = true; showCreateGroupModal = false;", (closeModal)="updatePrimaryAssetZoom(); showCreateGroupModal = false")
ang-access-denied-modal(*ngIf="showAccessDeniedModal", [showSkipAsset]="isFullscreen && isAssetSkipable()", (skipAsset)="handleSkipAsset()", (exitFullScreen)="exitFullscreenViewer()")
ang-server-error-modal(*ngIf="showServerErrorModal", (exitFullScreen)="exitFullscreenViewer()")
ang-generate-citation(
  *ngIf="showGenerateCitation",
  [asset]="assets[0]",
  (closeModal)="showGenerateCitation = false",
  (doLog)="trackEvent('artstor_citation')"
)
ang-confirm-modal(*ngIf="showExitEdit", (closeModal)="closeEditDetails($event)", title="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.TITLE' | translate }}", description="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.DESC' | translate }}", dismiss="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.CANCEL' | translate }}", primary="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.CONTINUE' | translate }}")
ang-confirm-modal(*ngIf="showDeletePCModal", (closeModal)="closeDeletePC($event)", title="{{ 'ASSET_PAGE.DELETE_PC_MODAL.TITLE' | translate }}", description="{{ 'ASSET_PAGE.DELETE_PC_MODAL.DESCRIPTION' | translate }}", primary="Confirm")

<ng-template #multiViewDownloadDisabled>
  div This is not available for download at this time.
</ng-template>
