#mainContent.container-fluid.asset-page(*ngIf="assetIds[0]", [class.fullscreen]="isFullscreen", tabindex="-1")
  .row
    //- View prev/next asset
    .title-nav-cntnr.col-md-12([class.hidden]="isFullscreen")
      span.back-results.hidden-sm-down(*ngIf="prevRouteParams.length > 0", (click)="backToResults()") {{ 'ASSET_PAGE.LINKS.BACK' | translate}}
      .title-wrap(*ngIf="assets[0]")
        i.icon.icon-direction.icon-left(title="Previous in results", (click)="showPrevAsset()", [class.disabled]="assetNumber <= 1")
        .title([ngClass]="[ prevRouteParams.length > 0 ? 'shortened' : '' ]", [innerHTML]="assets[0].title ? assets[0].title : ''")
        i.icon.icon-direction.icon-right(title="Next in results", (click)="showNextAsset()", [class.disabled]="assetNumber >= totalAssetCount")
      .page-tooltip
        span#assetPageNumber {{ assetNumber }}  OF
        = " "
        span#assetPageCount {{ totalAssetCount }}
    //- Asset Viewer Row
    .asset-col([ngClass]="[ isFullscreen ? 'fullscreen-container' : 'col-md-8', showAssetDrawer && isFullscreen ? 'drawer' : '' ]")
      artstor-viewer(*ngFor="let assetId of (isFullscreen ? assetIds : [assetIds[0]]); let i = index",
        [testEnv]="_auth.getEnv() === 'test'",
        [assetId]="assetId",
        [encrypted]="encryptedAccess",
        [groupId]="assetGroupId",
        (assetMetadata)="handleLoadedMetadata($event, i)",
        [ngClass]="[ 'asset-viewer-' + assetIds.length ]",
        (fullscreenChange)="updateFullscreenVar($event)",
        [index]="i",
        [assetCompareCount]="assets.length",
        [assetNumber]="assetNumber",
        [assetGroupCount]="totalAssetCount",
        [assets]="assets",
        [isFullscreen]="isFullscreen",
        [showCaption]="showAssetCaption",
        [quizMode]="quizMode",
        [prevAssetResults]="prevAssetResults",
        (removeAsset)="toggleAsset($event)",
        (nextPage)="showNextAsset()",
        (prevPage)="showPrevAsset()",
        (assetDrawer)="toggleAssetDrawer(!showAssetDrawer)")
      //- Related results from JSTOR
      .pl-3(*ngIf="jstorResults.length > 0 && relatedResFlag")
        .row-hdr.pt-3 Related Results from JSTOR
        .jstor-result(*ngFor="let result of jstorResults")
          a([attr.href]="'http://www.jstor.org/stable/' + result.doi", target="_blank", (mouseenter) ="setToolTipData(result)", [ngbTooltip]="tipContent")
            .type {{ result.type + ': '}}
            .label([innerHTML]="result.label")
        a.link.small([attr.href]="'http://www.jstor.org/action/doBasicSearch?Query=' + relatedResultsQuery", target="_blank") See more Results
      ng-template(#tipContent="", placement="right") 
        div(*ngIf="selectedJstorResult.title")
          h3 {{ selectedJstorResult.title }}
          .tool-tip-lbl(*ngIf="selectedJstorResult.authors") Author
          div(*ngFor="let author of selectedJstorResult.authors") {{ author }}
          br
          .tool-tip-lbl(*ngIf="selectedJstorResult.publishers") Published by:
          div(*ngFor="let publisher of selectedJstorResult.publishers") {{ publisher.publisher }}
          br
          div(*ngIf="selectedJstorResult.doi") Stable URL: {{ 'http://www.jstor.org/stable/' + selectedJstorResult.doi }}

      .col-md-12.quiz-caption-cntnr(*ngIf="isFullscreen", [ngClass]="[ showAssetCaption ? '' : 'cntnr-bg' ]")
        .caption-btn-cntnr([ngClass]="[ showAssetCaption ? 'active' : '' ]", (click)="showAssetCaption = !showAssetCaption", title="{{ showAssetCaption ? 'Hide Asset Meta Information' : 'Show Asset Meta Information' }}")
          span.caption-btn
          | {{ showAssetCaption ? 'HIDE CAPTION' : 'SHOW CAPTION' }}
        .quiz-browse-cntnr(*ngIf="quizMode")
          i.icon.icon-direction.icon-left([class.disabled]="assetNumber <= 1", title="Previous in results", (click)="showPrevAsset()")
          i.icon.icon-direction.icon-right([class.disabled]="assetNumber >= totalAssetCount", title="Next in results", (click)="showNextAsset()")
        .shuffle-cntnr(*ngIf="quizMode", [ngClass]="[ quizShuffle ? 'active' : '' ]", (click)="toggleQuizShuffle()", title="Toggle Asset Suffle")
          span.shuffle-btn
          | SHUFFLE {{ quizShuffle ? 'ON' : 'OFF' }}
        .quiz-cntnr([ngClass]="[ quizMode ? 'active' : '' ]", (click)="toggleQuizMode()", title="{{ quizMode ? 'Deactivate Quiz Mode' : 'Activate Quiz Mode' }}")
          span.quiz-btn
          | QUIZ MODE {{ quizMode ? 'ON' : 'OFF' }}
    //- Asset Metadata Column
    .col-md-4(*ngIf="assets[0]",[class.hidden]="isFullscreen")
      .py-3
        .alert.alert-info(*ngIf="publishing")
          div {{ 'ASSET_PAGE.MESSAGES.PUBLISHING' | translate}}
        //- If the user has not accepted the agreement, show modal when clicked, otherwise download immediately
        .btn-row
          //- (mouseup) is a Firefox fix for firing the copy event
          button.btn.btn-secondary(*ngIf="pcFeatureFlag && (assets[0].collectionId === '37436') && !publishing", [class.active]="showEditDetails", tabindex="1", (click)="loadEditDetailsForm()")
            | {{ 'ASSET_PAGE.BUTTONS.EDIT_DETAILS' | translate}}
          button.btn.btn-secondary([class.active]="showCopyUrl", tabindex="2", (mousedown)="showCopyUrl ? showCopyUrl = false : copyGeneratedImgURL()", (mouseup)="copyUrlInput.select(); document.execCommand('copy', false, null)")
            | {{ 'ASSET_PAGE.BUTTONS.LINK' | translate}}
            i#genImgURLlink.icon.icon-share-white
            
          //- Download dropdown options
          | {{downloadUrl}}
          .dropdown.d-inline-block(ngbDropdown, *ngIf="assets[0].downloadLink && (user.isLoggedIn || hasExternalAccess)")
            button#downloadAssetDropdown.btn.btn-secondary(ngbDropdownToggle, (click)="genDownloadViewLink()", tabindex="3")
              | {{ 'ASSET_PAGE.BUTTONS.DOWNLOAD' | translate}}
              = " "
            .dropdown-menu(ngbDropdownMenu, aria-labelledby="dropdownBasic1")
              a#downloadAssetLink.dropdown-item(download,
                [attr.href]="(downloadAuth() && !assets[0].disableDownload) ? generatedFullURL : null",
                (click)="(downloadAuth() && !assets[0].disableDownload) ? trackDownloadImage() : setDownloadImage()",
                [class.disabled]="assets[0].disableDownload",
                title="{{ assets[0].disableDownload ? 'Image is not available for download.' : 'Image download'}}",
                target="_blank",
                tabindex="3")
                i.icon.icon-download-black
                | Download File
              a#downloadViewLink.dropdown-item(download="download.jpg",
                type="image/jpeg",
                [attr.href]="(downloadAuth() && !assets[0].disableDownload) ? generatedViewURL : null",
                (click)="(downloadAuth() && !assets[0].disableDownload) ? trackDownloadView() : setDownloadView()",
                [class.disabled]="assets[0].disableDownload || assets[0].typeName !== 'image'",
                target="_self",
                tabindex="3")
                i.icon.icon-download-black
                | Download View
          //- False door button if user is not logged in
          button.btn.btn-secondary(tabindex="4", *ngIf="assets[0].downloadLink && !(user.isLoggedIn || hasExternalAccess)", (click)="showLoginModal = true")
            | {{ 'ASSET_PAGE.BUTTONS.DOWNLOAD' | translate}}
            i#downloadAssetLink.icon.icon-download
          a.btn.btn-secondary(*ngIf="assets[0]", tabindex="5", (click)="showGenerateCitation = true")
            | {{ 'ASSET_PAGE.BUTTONS.GENERATE_CITATION' | translate}}
          a.btn.btn-secondary(*ngIf="assets[0]", tabindex="6", [attr.href]=" '/#/assetprint/' + assets[0].id ", target="_blank")
            | {{ 'ASSET_PAGE.BUTTONS.PRINT' | translate}}
          button.btn.btn-primary((click)="addAssetToIG()", tabindex="7")
            | {{ 'ASSET_PAGE.BUTTONS.ADD_TO_GROUP' | translate }}
            i.icon.icon-add-white(aria-hidden="true")
          .form-group.pt-1([class.hidden]="!showCopyUrl")
            label {{ 'ASSET_PAGE.HEADER_LABELS.SHR_LNK' | translate}}
            input#generatedImgURL.form-control.form-control__copy(#copyUrlInput="", readonly, [ngModel]="generatedImgURL", (click)="copyUrlInput.select(); document.execCommand('copy', false, null)")
            .alert.alert-info(*ngIf="copyURLStatusMsg") {{ copyURLStatusMsg }}
        div(*ngIf="!showEditDetails")
          .row-hdr.pt-3(*ngIf="(assets[0].formattedMetadata | keys).length > 0") {{ 'ASSET_PAGE.HEADER_LABELS.OBJ_DETAILS' | translate}}
          .meta-block.collection-type-display(*ngIf="collectionType")
            i.icon(class="icon-{{collectionType.name}}", [attr.title]="collectionType.alt")
            | &nbsp; {{ collectionType.alt }}
          //- Old metadata loop
          .meta-block(*ngFor="let fieldName of assets[0].formattedMetadata | keys")
            .label([attr.id]="cleanId(fieldName)") {{ fieldName }}
            div(*ngFor="let value of assets[0].formattedMetadata[fieldName]")
              a.value.col-link(*ngIf="(fieldName === 'Collection') && collectionLinksFlag", [routerLink]="[ assets[0].collectionId === '103' ? '/category' : '/collection', assets[0].collectionId === '103' ? assets[0].categoryId : assets[0].collectionId ]", [innerHTML]="cleanFieldValue(value)")
              .value(*ngIf="(fieldName !== 'Collection' )|| !collectionLinksFlag", [innerHTML]="cleanFieldValue(value) | linkify")
          .row-hdr.pt-3(*ngIf="assets[0].filePropertiesArray.length > 0") {{ 'ASSET_PAGE.HEADER_LABELS.FILE_PROPS' | translate}}
          //- Loop through File Properties Array
          //- .meta-block(*ngFor="let filePropObj of assets[0].filePropertiesArray")
          //-   .label([attr.id]="cleanId(filePropObj.fieldName)") {{ filePropObj.fieldName }}
          //-     .value([innerHTML]="filePropObj.fieldValue")
          .meta-block(*ngIf="assets[0].fileName")
            .label#fileName {{ 'ASSET_PAGE.METADATA_LABELS.FILE_NAME' | translate }}
              .value([innerHtml]="assets[0].fileName")
          .meta-block(*ngIf="assets[0].SSID")
            .label#ssid {{ 'ASSET_PAGE.METADATA_LABELS.SSID' | translate }}
              .value([innerHtml]="assets[0].SSID")
          .text-left.pt-2
            a#buttonRequestIap.btn.btn-secondary.my-1(*ngIf="route.snapshot.queryParams.iap == 'true'", [attr.href]="'http://www.artstor.org/form/iap-request-form?name=' + assets[0].title + '&collectionName=' + assets[0].collectionName + '&id=' + assets[0].id + '&email=' + user.username", title="Request Image for Academic Publishing", tabindex="8", target="_blank") {{'ASSET_PAGE.BUTTONS.GET_IAP' | translate}}
            a#buttonReportAssetError.btn.btn-secondary.my-1([attr.href]="'http://www.artstor.org/form/report-error?collectionName=' + assets[0].collectionName + '&id=' + assets[0].id + '&email=' + user.username", title="Report an error", tabindex="9", target="_blank") {{'ASSET_PAGE.BUTTONS.REPORT_ERROR' | translate}}
        
        .mt-2(*ngIf="showEditDetails")
          button.close.mb-3((click)="showExitEdit = true", type="button", aria-label="Close")
            span(aria-hidden="true") &times;

          form#editDetailsForm.pt-4.mr-4([formGroup]="editDetailsForm", (ngSubmit)="editDetailsFormSubmit(editDetailsForm.value)")
            .form-body
              .form-group
                label(for="creatorInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.CREATOR' | translate }}
                input#creatorInput.form-control(type="text", [formControl]="editDetailsForm.controls['creator']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                label(for="titleInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.TITLE' | translate }}
                input#titleInput.form-control(type="text", [formControl]="editDetailsForm.controls['title']", placeholder="", spellcheck="false", tabindex="1")
                .has-danger(*ngIf="editDetailsFormSubmitted && editDetailsForm.controls['title'].hasError('required')")
                  p.form-control-feedback {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.TITLE_REQUIRED_MSG' | translate }}
              .form-group
                label(for="worktypeInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.WORK_TYPE' | translate }}
                input#worktypeInput.form-control(type="text", [formControl]="editDetailsForm.controls['work_type']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                label(for="dateInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DATE' | translate }}
                input#dateInput.form-control(type="text", [formControl]="editDetailsForm.controls['date']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                label(for="locationInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.LOCATION' | translate }}
                input#locationInput.form-control(type="text", [formControl]="editDetailsForm.controls['location']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                label(for="materialInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.MATERIAL' | translate }}
                input#materialInput.form-control(type="text", [formControl]="editDetailsForm.controls['material']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                label(for="descriptionInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DESCRIPTION' | translate }}
                input#descriptionInput.form-control(type="text", [formControl]="editDetailsForm.controls['description']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                label(for="subjectInput") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.SUBJECT' | translate }}
                input#subjectInput.form-control(type="text", [formControl]="editDetailsForm.controls['subject']", placeholder="", spellcheck="false", tabindex="1")
              .form-group
                button.btn.btn-secondary(type="button", tabindex="1") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.DELETE_BTN' | translate }}
                = " "
                button.btn.btn-primary(type="submit", [class.loading]="isProcessing", tabindex="1") {{ 'ASSET_PAGE.EDIT_DETAILS_FORM.SAVE_BTN' | translate }}
              
    .fullscreen-btns.button-group(*ngIf="isFullscreen", [class.fade-out]="showAssetDrawer")
      button.btn.btn-light(*ngIf="!quizMode", (click)="showAssetDrawer = !showAssetDrawer")
          | {{ 'ASSET_PAGE.BUTTONS.COMPARE' | translate}}
          i.icon.icon-compare
      button.btn.btn-light(
          type="button",
          (click)="exitPresentationMode()",
          aria-label="Close",
          title="Exit Fullscreen"
        )
        | Exit
        .icon.icon-close
    //- Asset Drawer
    .asset-drawer(*ngIf="isFullscreen", [class.slideOut]="showAssetDrawer && isFullscreen")
      .col-sm-12
        h3.asset-drawer__header((click)="toggleAssetDrawer(!showAssetDrawer)")
          button.asset-drawer__close.pr-1(
            *ngIf="isFullscreen",
            type="button",
            aria-label="Close",
            style="float:left;"
          )
            .icon.icon-right
          | COMPARE
        .text-center
          pagination([pageObj]="pagination", (goToPage)="goToPage($event)", style="display:inline-block")
        div.pt-1.pb-3(*ngIf="prevAssetResults.thumbnails.length < 1")
          .alert.alert-info {{ 'ASSET_PAGE.MESSAGES.NEEDASSETS' | translate}}
        ang-thumbnail.card.card--asset(*ngFor="let asset of prevAssetResults.thumbnails", [thumbnail]="asset", [ngClass]="{'selected' : asset.selected || (assets[0].id == asset[assetIdProperty]), 'disabled': (asset.selected && assets.length === 1) }", (click)="toggleAsset(asset)")
        .text-center.pt-2
          pagination([pageObj]="pagination", (goToPage)="goToPage($event)", style="display:inline-block")
ang-agree-modal(*ngIf="showAgreeModal", (closeModal)="showAgreeModal = false", [assetUrl]="downloadUrl")
ang-login-req-modal(*ngIf="showLoginModal", (closeModal)="showLoginModal = false")
ang-add-to-group(*ngIf="showAddModal", [selectedAssets]="[ assets[0] ]", [showCreateGroup]="true", [copySelectionStr]=" 'ADD_TO_GROUP_MODAL.FROM_ASSET' ", (createGroup)="showCreateGroupModal = true; showAddModal = false;", (closeModal)="showAddModal = false")
ang-new-ig-modal(*ngIf="showCreateGroupModal", [selectedAssets]="[ assets[0] ]", [showAddToGroup]="true", (addToGroup)="showAddModal = true; showCreateGroupModal = false;", (closeModal)="showCreateGroupModal = false")
ang-access-denied-modal(*ngIf="showAccessDeniedModal", [showSkipAsset]="isFullscreen && isAssetSkipable()", (skipAsset)="handleSkipAsset()", (exitFullScreen)="assetViewer.exitFullScreen(); assetViewer.setFullscreen(false)")
ang-server-error-modal(*ngIf="showServerErrorModal", (exitFullScreen)="assetViewer.exitFullScreen(); assetViewer.setFullscreen(false)")
ang-generate-citation(*ngIf="showGenerateCitation", [asset]="assets[0]", (closeModal)="showGenerateCitation = false")
ang-confirm-modal(*ngIf="showExitEdit", (closeModal)="closeEditDetails($event)", title="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.TITLE' | translate }}", description="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.DESC' | translate }}", dismiss="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.CANCEL' | translate }}", primary="{{ 'ASSET_PAGE.EXIT_EDIT_CONFIRM_MODAL.CONTINUE' | translate }}")
